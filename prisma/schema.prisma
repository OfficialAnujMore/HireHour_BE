datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // output   = "./node_modules/@prisma/client"
}

model User {
  id              String     @id @default(uuid())
  name            String
  email           String     @unique
  username        String     @unique
  countryCode     String     @default("+1")
  phoneNumber     String
  password        String
  userRole        String     @default("CUSTOMER")
  profileImageURL String?
  bannerImageURL  String?
  lastLogin       DateTime   @default(now())
  isDeleted       Boolean    @default(false)
  isDisabled      Boolean    @default(false)
  token           String?
  refreshToken    String?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  Services        Services[]

  @@index(fields: [id, email, username])
}

model Services {
  id             String           @id @default(uuid())
  title          String
  description    String
  servicePreview ServicePreview[]
  schedule       Schedule[]
  chargesPerHour String
  category       String
  user           User             @relation(fields: [userId], references: [id])
  userId         String
  isDeleted      Boolean          @default(false)
  isDisabled     Boolean          @default(false)
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model ServicePreview {
  id         String    @id @default(uuid())
  imageURL   String
  services   Services? @relation(fields: [servicesId], references: [id])
  servicesId String?
}

model Schedule {
  id         String     @id @default(uuid())
  day        String     @default("Unknown") // Provide a default value
  month      String     @default("Unknown") // Provide a default value
  fullDate   DateTime   @default(now()) // Provide a default value
  date       String
  timeSlots  TimeSlot[]
  Services   Services?  @relation(fields: [servicesId], references: [id])
  servicesId String?
}

model TimeSlot {
  id         String   @id @default(uuid())
  time       String // Time of the slot (e.g., "9:30 AM")
  available  Boolean // Availability status
  schedule   Schedule @relation(fields: [scheduleId], references: [id])
  scheduleId String
}

enum Role {
  CUSTOMER
  SERVICE_PROVIDER
}
